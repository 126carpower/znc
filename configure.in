dnl Keep the version number in sync with main.h!
AC_INIT([znc], [0.059])
SAVED_CXXFLAGS="$CXXFLAGS"
AC_PROG_CXX
AC_CANONICAL_HOST

CXXFLAGS="$SAVED_CXXFLAGS"
INCLUDES=""

appendLib () {
	if test "$LIBS" != ""; then
		LIBS="$LIBS $*"
	else
		LIBS=$*
	fi
}

appendInc () {
	if test "$INCLUDES" != ""; then
		INCLUDES="$INCLUDES $*"
	else
		INCLUDES=$*
	fi
}

appendCXX () {
	if test "$CXXFLAGS" != ""; then
		CXXFLAGS="$CXXFLAGS $*"
	else
		CXXFLAGS=$*
	fi
}

appendLD () {
	if test "$LDFLAGS" != ""; then
		LDFLAGS="$LDFLAGS $*"
	else
		LDFLAGS=$*
	fi
}

appendCXX "-D_FORTIFY_SOURCE=2"

case "${host_os}" in
	freebsd*)
		appendInc -I/usr/local/include
		appendLib -L/usr/local/lib -lcompat
		MODFLAGS="$MODFLAGS -L/usr/local/lib"
	;;
	solaris*)
		appendLib -lsocket -lnsl
		ISSUN=1
	;;
	cygwin)
		ISCYGWIN=1
	;;
esac

# cygwin
# warning: -fPIC ignored for target (all code is position independent)

if test -z "$ISCYGWIN" ; then
	appendCXX -fPIC
fi

AC_ARG_WITH( [openssl],
	AC_HELP_STRING([--with-openssl=DIR], [openssl's installation prefix]),
	[OPENSSL=$withval],)
AC_ARG_ENABLE( [debug],
	AC_HELP_STRING([--enable-debug], [enable debuging]),
	[DEBUG="$enableval"],
	[DEBUG="no"])
AC_ARG_ENABLE( [ipv6],
	AC_HELP_STRING([--enable-ipv6], [enable ipv6 support]),
	[IPV6="$enableval"],
	[IPV6="no"])
AC_ARG_ENABLE( [modules],
	AC_HELP_STRING([--disable-modules], [disable modules]),
	[MODULES="$enableval"],
	[MODULES="yes"])
AC_ARG_ENABLE( [openssl],
	AC_HELP_STRING([--disable-openssl], [disable openssl]),
	[if test "$enableval" = "no" ; then NOSSL=1; fi],)
AC_ARG_ENABLE( [perl],
	AC_HELP_STRING([--disable-perl], [disable perl]),
	[if test "$enableval" = "no" ; then NOPERL=1; fi],)
AC_ARG_ENABLE( [sasl],
	AC_HELP_STRING([--enable-sasl], [enable sasl]),
	[if test "$enableval" = "yes" ; then SASL=1; fi],)

if test "$DEBUG" != "no"; then
	appendCXX -ggdb -D_DEBUG
	# These enable some debug options in g++'s STL, e.g. invalid use of iterators
	appendCXX -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -D_GLIBCXX_CONCEPT_CHECKS
else
	appendCXX -O2 -fomit-frame-pointer
fi

if test "$IPV6" != "no"; then
	appendCXX -DHAVE_IPV6
fi

if test "x$GXX" = "xyes"; then
	appendCXX -Wall -W -Wno-unused-parameter -Woverloaded-virtual -Wshadow
fi

AC_CHECK_LIB( gnugetopt, getopt_long,)
AC_CHECK_FUNCS( stat lstat chmod open, , AC_ERROR([Missing Required libc feature]))

if test -z "$NOSSL"; then
	if test -n "$OPENSSL"; then
		appendLib -L${OPENSSL}/lib
		appendInc -I${OPENSSL}/include
	fi

	AC_CHECK_LIB( crypto, BIO_new,,AC_ERROR([Could not find libcrypto. Try --disable-openssl]), )
	AC_CHECK_LIB( ssl, SSL_shutdown,,AC_ERROR([Could not find libssl. Try --disable-openssl]), )

	if test -z "$NOSSL"; then
		appendCXX -DHAVE_LIBSSL
	fi
fi

if test -z "$prefix" || test $prefix = "NONE"; then
	prefix="/usr/local"
fi

AC_ARG_WITH( [module-prefix],
	AC_HELP_STRING([--with-module-prefix],
		       [module object code [[LIBDIR/znc]]]),
	[MODDIR=$withval],
	[MODDIR="${libdir}/znc"] )

AC_ARG_WITH( [module-data-prefix],
	AC_HELP_STRING([--with-module-data-prefix=DIR],
		       [static module data (webadmin skins) [[DATADIR/znc]]]),
	[DATADIR=$withval],
	[DATADIR="${datadir}/znc"] )


if test "$MODULES" = "yes"; then
	FOUND_DL=no

	# Don't use any libs like -lssl -lcrypto when checking for dlopen(),
	# because they might change the test results
	SAVED_LIBS="$LIBS"
	LIBS=""

	AC_CHECK_FUNC(dlopen, FOUND_DL=yes,)
	AC_CHECK_LIB( dl, dlopen, FOUND_DL=yes ; appendLib -ldl,)

	appendLib "$SAVED_LIBS"

	if test $FOUND_DL = "no" ; then
		AC_ERROR([Could not find dlopen. Try --disable-modules])
	fi

	appendCXX -D_MODULES
	MODFLAGS="$MODFLAGS $CXXFLAGS"
	if test -z "$ISSUN"; then
		appendLD -Wl,--export-dynamic
	fi
	MODTARGET="modules"

	# FIXME why don't we do this for sun?
	if test -n "$ISSUN"; then
		MODFLAGS="$MODFLAGS -mimpure-text"
	fi

	appendCXX "-D_MODDIR_=\\\"${MODDIR}\\\""
	appendCXX "-D_DATADIR_=\\\"${DATADIR}\\\""

	if test -z "$NOPERL"; then
		echo -n "checking for perl... "
		PERL=`which perl`
		if test -n "$PERL"; then
			echo "$PERL"
			AC_CHECK_LIB(perl, perl_alloc,unset NOPERL,
				AC_ERROR([Could not find libperl. Try --disable-perl]),
				[`$PERL -MExtUtils::Embed -e ccopts -e ldopts`])
		else
			echo "no"
			AC_ERROR([Could not find perl binary. Try --disable-perl])
		fi
	fi

	if test -n "$SASL"; then
		AC_CHECK_LIB( sasl2, sasl_server_init,
			[: Dont let autoconf add -lsasl2, Makefile handles that],
			AC_ERROR([Could not find libsasl2. Try --disable-sasl.]))
	fi
fi

VERSION=AC_PACKAGE_VERSION
#
# Auto detect modules

AC_SUBST([CXXFLAGS])
AC_SUBST([MODFLAGS])
AC_SUBST([LDFLAGS])
AC_SUBST([INCLUDES])
AC_SUBST([LIBS])
AC_SUBST([MODULES])
AC_SUBST([MODTARGET])
AC_SUBST([VERSION])
AC_SUBST([NOSSL])
AC_SUBST([PERL])
AC_SUBST([SASL])
AC_SUBST([MODDIR])
AC_SUBST([DATADIR])
AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([znc-config])
AC_CONFIG_FILES([znc-buildmod])
AC_CONFIG_FILES([man/Makefile])
if test "$MODULES" = "yes"; then
	AC_CONFIG_FILES([modules/Makefile])
fi
AC_OUTPUT

echo
echo znc $VERSION configured
echo
echo "debug:   $DEBUG"
echo "ipv6:    $IPV6"
if test x"$NOSSL" = "x1" ; then
	echo "openssl: no"
else
	echo "openssl: yes"
fi
echo modules: $MODULES
if test x"$PERL" = "x" ; then
	echo "perl:    no"
else
	echo "perl:    yes"
fi
if test x"$SASL" = "x" ; then
	echo "sasl:    no"
else
	echo "sasl:    yes"
fi

